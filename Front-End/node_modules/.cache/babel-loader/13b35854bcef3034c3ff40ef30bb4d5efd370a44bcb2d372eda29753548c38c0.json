{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { MyAPI_URL } from './myapi';\nfunction Test() {\n  _s();\n  /*\r\n  const [favoriteweather, setFavoriteweather] = useState({});\r\n      useEffect(() => {\r\n    const weather = async () => {\r\n      console.log('FetchFavoriteweathers lancée1');\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/locations/weather/Casablanca\");\r\n        const data = await response.json();\r\n        if (data) {\r\n          console.log('FetchFavoriteweathers lancée2')\r\n          setFavoriteweather(data);\r\n        } else {\r\n          console.log('FetchFavoriteweathers lancée0')\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to fetch favorites:', error);\r\n      }\r\n    };\r\n        weather();\r\n  }, []);\r\n      console.log(11);\r\n  console.log(favoriteweather);\r\n  */\n\n  const [favoriteLocations, setFavoriteLocations] = useState(['Casablanca', 'Rabat']);\n  const [favoriteWeather, setFavoriteWeather] = useState([]);\n  useEffect(() => {\n    fetchFavoriteWeather();\n  }, [favoriteLocations]);\n  const fetchFavoriteWeather = () => {\n    const fetchWeather = async location => {\n      try {\n        const response = await fetch(`http://localhost:5000/locations/weather/${location}`);\n        const data = await response.json();\n        if (data) {\n          return {\n            location: data\n          };\n        }\n        return null;\n      } catch (error) {\n        console.error('Failed to fetch weather:', error);\n        return null;\n      }\n    };\n    const fetchAllWeather = async () => {\n      const weatherPromises = favoriteLocations.map(location => fetchWeather(location));\n      const weatherData = await Promise.all(weatherPromises);\n      setFavoriteWeather(weatherData.filter(data => data !== null));\n    };\n    fetchAllWeather();\n  };\n  return null;\n}\n_s(Test, \"oFBA+ywXBPd0twLAgDxO3XR64g0=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useState","useEffect","MyAPI_URL","Test","_s","favoriteLocations","setFavoriteLocations","favoriteWeather","setFavoriteWeather","fetchFavoriteWeather","fetchWeather","location","response","fetch","data","json","error","console","fetchAllWeather","weatherPromises","map","weatherData","Promise","all","filter","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Projects/React/Front-End/src/test.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {  MyAPI_URL } from './myapi';\r\n\r\n\r\nfunction Test() {\r\n    /*\r\n    const [favoriteweather, setFavoriteweather] = useState({});\r\n  \r\n    useEffect(() => {\r\n      const weather = async () => {\r\n        console.log('FetchFavoriteweathers lancée1');\r\n        try {\r\n          const response = await fetch(\"http://localhost:5000/locations/weather/Casablanca\");\r\n          const data = await response.json();\r\n          if (data) {\r\n            console.log('FetchFavoriteweathers lancée2')\r\n            setFavoriteweather(data);\r\n          } else {\r\n            console.log('FetchFavoriteweathers lancée0')\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to fetch favorites:', error);\r\n        }\r\n      };\r\n  \r\n      weather();\r\n    }, []);\r\n  \r\n    console.log(11);\r\n    console.log(favoriteweather);\r\n  */\r\n  \r\n    \r\n\r\n    const [favoriteLocations, setFavoriteLocations] = useState(['Casablanca', 'Rabat']);\r\n    const [favoriteWeather, setFavoriteWeather] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchFavoriteWeather();\r\n  }, [favoriteLocations]);\r\n\r\n  const fetchFavoriteWeather = () => {\r\n    const fetchWeather = async (location) => {\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/locations/weather/${location}`);\r\n        const data = await response.json();\r\n        if (data) {\r\n          return { location: data };\r\n        }\r\n        return null;\r\n      } catch (error) {\r\n        console.error('Failed to fetch weather:', error);\r\n        return null;\r\n      }\r\n    };\r\n\r\n    const fetchAllWeather = async () => {\r\n      const weatherPromises = favoriteLocations.map((location) => fetchWeather(location));\r\n      const weatherData = await Promise.all(weatherPromises);\r\n      setFavoriteWeather(weatherData.filter((data) => data !== null));\r\n    };\r\n\r\n    fetchAllWeather();\r\n  };\r\n  \r\n  return null;\r\n}\r\n  \r\nexport default Test;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAAUC,SAAS,QAAQ,SAAS;AAGpC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAOI,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGN,QAAQ,CAAC,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;EACnF,MAAM,CAACO,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACdQ,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACJ,iBAAiB,CAAC,CAAC;EAEvB,MAAMI,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,YAAY,GAAG,MAAOC,QAAQ,IAAK;MACvC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0CF,QAAS,EAAC,CAAC;QACnF,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClC,IAAID,IAAI,EAAE;UACR,OAAO;YAAEH,QAAQ,EAAEG;UAAK,CAAC;QAC3B;QACA,OAAO,IAAI;MACb,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChD,OAAO,IAAI;MACb;IACF,CAAC;IAED,MAAME,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,MAAMC,eAAe,GAAGd,iBAAiB,CAACe,GAAG,CAAET,QAAQ,IAAKD,YAAY,CAACC,QAAQ,CAAC,CAAC;MACnF,MAAMU,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,eAAe,CAAC;MACtDX,kBAAkB,CAACa,WAAW,CAACG,MAAM,CAAEV,IAAI,IAAKA,IAAI,KAAK,IAAI,CAAC,CAAC;IACjE,CAAC;IAEDI,eAAe,CAAC,CAAC;EACnB,CAAC;EAED,OAAO,IAAI;AACb;AAACd,EAAA,CA9DQD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAgEb,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}