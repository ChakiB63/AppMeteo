{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { MyAPI_URL } from './myapi';\nfunction Test() {\n  _s();\n  //const [favoriteweather, setFavoriteweather] = useState({});\n\n  useEffect(() => {\n    console.log(favoriteweather);\n  }, [favoriteweather]);\n  const weather = adress => {\n    console.log('FetchFavoriteweathers lancée1');\n    fetch(`${MyAPI_URL}/locations/weather/${adress}`).then(response => response.json()).then(data => {\n      if (data && data.length > 0) {\n        console.log('FetchFavoriteweathers lancée2');\n        setFavoriteweather(data);\n        return;\n      } else {\n        console.log('FetchFavoriteweathers lancée0');\n        setFavoriteweather({});\n        return;\n      }\n    }).catch(error => {\n      console.error('Failed to fetch favorites:', error);\n      setFavoriteweather({});\n      return;\n    });\n  };\n\n  //weather('Casablanca');\n}\n_s(Test, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["useState","useEffect","MyAPI_URL","Test","_s","console","log","favoriteweather","weather","adress","fetch","then","response","json","data","length","setFavoriteweather","catch","error","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Projects/React/Front-End/src/test.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport {  MyAPI_URL } from './myapi';\r\n\r\n\r\nfunction Test() {\r\n    \r\n    //const [favoriteweather, setFavoriteweather] = useState({});\r\n\r\n    useEffect(() => {\r\n        console.log(favoriteweather);\r\n      }, [favoriteweather]);\r\n\r\n    const weather=(adress)=>{\r\n        console.log('FetchFavoriteweathers lancée1');\r\n        fetch(`${MyAPI_URL}/locations/weather/${adress}`)\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            if (data && data.length > 0) {\r\n              console.log('FetchFavoriteweathers lancée2')\r\n              setFavoriteweather(data);\r\n              return;\r\n            } else {\r\n                console.log('FetchFavoriteweathers lancée0')\r\n              setFavoriteweather({});\r\n              return;\r\n          }})\r\n          .catch((error) => {\r\n            console.error('Failed to fetch favorites:', error);\r\n            setFavoriteweather({});\r\n            return;\r\n          });\r\n        }\r\n\r\n        //weather('Casablanca');\r\n\r\n      \r\n}\r\nexport default Test;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAAUC,SAAS,QAAQ,SAAS;AAGpC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEZ;;EAEAH,SAAS,CAAC,MAAM;IACZI,OAAO,CAACC,GAAG,CAACC,eAAe,CAAC;EAC9B,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAEvB,MAAMC,OAAO,GAAEC,MAAM,IAAG;IACpBJ,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;IAC5CI,KAAK,CAAE,GAAER,SAAU,sBAAqBO,MAAO,EAAC,CAAC,CAC9CE,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC3BV,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC5CU,kBAAkB,CAACF,IAAI,CAAC;QACxB;MACF,CAAC,MAAM;QACHT,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC9CU,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACtB;MACJ;IAAC,CAAC,CAAC,CACFC,KAAK,CAAEC,KAAK,IAAK;MAChBb,OAAO,CAACa,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDF,kBAAkB,CAAC,CAAC,CAAC,CAAC;MACtB;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;AAGR;AAACZ,EAAA,CAhCQD,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAiCb,eAAeA,IAAI;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}